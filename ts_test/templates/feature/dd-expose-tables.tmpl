env HOME={{.Home}}
env TMPDIR={{.TmpDir}}
env db_version={{.DbVersion}}
env sb_dir=$HOME/sandboxes/msb_{{.DbPathVer}}_dd
env db_port={{.DbIncreasedPort}}

[!exists_within_seconds:$HOME/opt/mysql/{{.DbVersion}}/bin/mysqld-debug:0] skip 'no mysqld-debug found for version {{.DbVersion}}'

! exists $sb_dir

# deployment

env db_dir=--sandbox-directory=msb_{{.DbPathVer}}_dd
exec dbdeployer deploy single $db_version --expose-dd-tables --disable-mysqlx $db_dir --port=8001
stdout 'Database installed in .*/sandboxes/msb_{{.DbPathVer}}_dd'
stdout 'sandbox server started'
! stderr .
exists $sb_dir

cleanup_at_end $sb_dir

# check files and ports

check_file $sb_dir start stop status clear
check_file $sb_dir add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir replicate_from send_kill sysbench use
check_file $sb_dir metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir connection.conf grants.mysql my sb_include show_log test_sb
check_file $sb_dir/data msandbox.err

env required_ports=1
check_ports $sb_dir $required_ports

exec $sb_dir/test_sb
stdout '# fail  :     0'
! stderr .

! find_errors $sb_dir

# check dictionary tables

run_sql_in_sandbox $sb_dir 'select VERSION()' {{.DbVersion}}-debug
run_sql_in_sandbox $sb_dir 'select @@debug is not null' 1
exec $sb_dir/use -BN -e 'select count(*) from mysql.tables where name =''tables'' and schema_id=1'
stdout '\b1\b'
! stderr .
exec $sb_dir/use -BN -e 'select count(*) from information_schema.tables where table_name =''tables'' and table_schema=''mysql'''
stdout '\b1\b'
! stderr .

# sandbox cleanup
exec dbdeployer delete msb_{{.DbPathVer}}_dd
stdout 'sandboxes/msb_{{.DbPathVer}}_dd'
! stderr .
! exists $sb_dir
