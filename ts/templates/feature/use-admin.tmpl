[!unix] skip 'this procedure can only work on Unix systems'
env HOME={{.Home}}
env TMPDIR={{.TmpDir}}
env db_version={{.DbVersion}}
env sb_dir=$HOME/sandboxes/msb_{{.DbPathVer}}_admin
env db_port={{.DbIncreasedPort}}

! exists $sb_dir

# deployment

env db_dir=--sandbox-directory=msb_{{.DbPathVer}}_admin
exec dbdeployer deploy single $db_version --enable-admin-address $db_dir --port=$db_port --disable-mysqlx
stdout 'Database installed in .*/sandboxes/msb_{{.DbPathVer}}_admin'
stdout 'sandbox server started'
! stderr .
exists $sb_dir

cleanup_at_end $sb_dir

# check files and ports

check_file $sb_dir start stop status clear
check_file $sb_dir add_option connection.json init_db my.sandbox.cnf
check_file $sb_dir sbdescription.json show_relaylog after_start connection.sql load_grants
check_file $sb_dir replicate_from send_kill sysbench use use_admin
check_file $sb_dir metadata restart show_binlog sysbench_ready wipe_and_restart
check_file $sb_dir connection.conf grants.mysql my sb_include show_log test_sb
check_file $sb_dir/data msandbox.err

env required_ports=2
check_ports $sb_dir $required_ports

exec $sb_dir/test_sb
stdout '# fail  :     0'
! stderr .

! find_errors $sb_dir

# use admin port

stdin select-user.txt
exec $sb_dir/use_admin
stdout 'root'

stdin select-admin-port.txt
exec $sb_dir/use_admin
stdout '\b\d+\b'

# sandbox cleanup
exec dbdeployer delete msb_{{.DbPathVer}}_admin
stdout 'sandboxes/msb_{{.DbPathVer}}_admin'
! stderr .
! exists $sb_dir

-- select-admin-port.txt --
select @@admin_port
-- select-user.txt --
select USER()