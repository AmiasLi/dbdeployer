[!unix] skip 'this procedure can only work on Unix systems'
env HOME={{.Home}}
env TMPDIR={{.TmpDir}}
env sb_dir=$HOME/sandboxes/group_sp_msb_{{.DbPathVer}}
env db_version={{.DbVersion}}

[!minimum_version_for_group:$db_version:{{.DbFlavor}}] skip 'minimum version for group replication not met'
! exists $sb_dir

# deployment

exec dbdeployer deploy replication --topology=group --concurrent --single-primary $db_version
exists $sb_dir
exists $sb_dir/node3
cleanup_at_end $sb_dir

stdout 'Group Replication directory installed in .*/sandboxes/group_sp_msb_{{.DbPathVer}}'
stdout 'initialize_nodes'
stdout -count=5 '# Node 1'
stdout -count=3 '# Node 3'
stdout -count=3 '# Node 3'
! stderr .

# check files and ports

sleep 2
exec $sb_dir/check_nodes
stdout -count=9 'ONLINE'
[version_is_at_least:$db_version:8.0.0] stdout -count=3 'PRIMARY'
[version_is_at_least:$db_version:8.0.0] stdout -count=6 'SECONDARY'
stdout -count=3 '[0-9]{8}-1111-1111-1111-111111111111'
stdout -count=3 '[0-9]{8}-2222-2222-2222-222222222222'
stdout -count=3 '[0-9]{8}-3333-3333-3333-333333333333'
! stderr .

check_sandbox_manifest $sb_dir group

env required_ports=6
[version_is_at_least:$db_version:8.0.0] env required_ports=9
check_ports $sb_dir $required_ports

exec $HOME/sandboxes/group_sp_msb_{{.DbPathVer}}/test_replication
stdout '# fail: 0'
! stderr .

! find_errors $sb_dir/node1
! find_errors $sb_dir/node2
! find_errors $sb_dir/node3

# test use_* commands

exec $sb_dir/use_all 'select @@server_id'
stdout -count=3 '^[0-9]+$'
exec $sb_dir/use_all_masters 'select @@server_id'
stdout -count=1 '^[0-9]+$'
exec $sb_dir/use_all_slaves 'select @@server_id'
stdout -count=2 '^[0-9]+$'

# test dbdeployer sandboxes

exec dbdeployer sandboxes
stdout 'group_sp_msb_{{.DbPathVer}}.*group-single-primary'
! stderr .

# sandbox cleanup

exec dbdeployer delete group_sp_msb_{{.DbPathVer}}
stdout 'sandboxes/group_sp_msb_{{.DbPathVer}}'
! stderr .